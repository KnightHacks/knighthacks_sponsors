scalar Time

type Sponsor {
  id: ID!
  name: String!
  tier: SubscriptionTier!
  since: Time!
  description: String
  website: String
  logo: String
}

enum SubscriptionTier {
    BRONZE
    SILVER
    GOLD
    PLATINUM
}

input SponsorFilter {
    tiers: [SubscriptionTier!]
}

type Query {
  sponsors(filter: SponsorFilter): [Sponsor!]!
}

input NewSponsor {
  name: String!
  tier: SubscriptionTier!
  since: Time
  description: String
  website: String
  logo: String
}

input UpdatedSponsor {
  name: String
  tier: SubscriptionTier
  since: Time
  description: String
  website: String
  logo: String
}

type Mutation {
  createSponsor(input: NewSponsor!): Sponsor!
  updateSponsor(id: ID!, input: UpdatedSponsor!): Sponsor!
}
